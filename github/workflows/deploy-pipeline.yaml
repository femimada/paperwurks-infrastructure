name: 2. Infrastructure Gate and Deployment Pipeline

on:
  # Triggered ONLY by the application repository after a successful ECR push
  repository_dispatch:
    types: [new-backend-artifact]

permissions:
  id-token: write
  contents: read

env:
  TARGET_ENV: ${{ github.event.client_payload.environment }}
  IMAGE_TAG: ${{ github.event.client_payload.image_tag }}
  WORKING_DIR: environments/${{ github.event.client_payload.environment }}
  AWS_REGION: eu-west-2

jobs:
  terraform_apply:
    name: Terraform Apply (${{ env.TARGET_ENV }})
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Infra Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (Infra Role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/paperwurks-terraform-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Set Successful Status
        id: infra_ready
        run: echo "status=SUCCESS" >> $GITHUB_OUTPUT

  # Job 2: Application Deployment
  deploy_application:
    name: Deploy Application (${{ env.TARGET_ENV }})
    runs-on: ubuntu-latest
    needs: [terraform_apply]

    steps:
      # 1. ASSUME DEPLOY ROLE (ECS-Update Policy Only)
      - name: Configure AWS Credentials (Deploy Role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/paperwurks-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      # 2. Deploy to ECS Service
      - name: Deploy new Task Definition to ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: paperwurks-${{ env.TARGET_ENV }}-backend-service
          cluster: paperwurks-${{ env.TARGET_ENV }}-cluster
          image-tag: ${{ env.IMAGE_TAG }}
          wait-for-service-stability: true
